<?xml version="1.0" encoding="UTF-8" ?>
<!-- PreparedStatement . ResultSet CRUD -->
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.dao.DataBoardMapper">
   <!-- 
      resultType => 결과값을 받는다 (vo.setpwd 생각하면됨)
      SELECT pwd FROM member
      resultType = "String"
      SELECT * FROM food
      resultType ="FoodVO" => "hashmap" 
      
      parameterType => ?에 값을 채운다 ==> #{start} AND #{end}
      ?가 1개면 해당 데이터형 (String, int ..)
      
      ?가 여러개면
       ==>  VO, hashmap (vo에 없다면!)
       
       NVL(MAX(no)+1,1) => 시퀀스 생성!!!! / order="BEFORE" => 먼저 수행
       <selectKey keyProperty="no" resultType="int" order="BEFORE">
       SELECT NVL(MAX(no)+1,1) as no FROM project_databoard
    </selectKey>
    
    #{no} => vo.getname
    -->
   <select id="databoardListData" resultType="DataBoardVO" parameterType="hashmap">
      SELECT no,subject,name,TO_CHAR(regdate,'YYYY-MM-DD') as dbday, hit, num
      FROM (SELECT no,subject,name,regdate, hit, ROWNUM as num
      FROM (SELECT /*+ INDEX_DESC(project_databoard pd_no_pk)*/no,subject,name,regdate, hit
      FROM project_databoard))
      WHERE num BETWEEN #{start} AND #{end}
   </select>
   <!-- 
      #{start} AND #{end}
      map의 키 이름! ==> map.get("start") / map.get("end")
      map.put("start",1)
      map.put("end",10)
    -->
    <select id="databoardRowCount" resultType="int">
       SELECT COUNT(*) FROM project_databoard
    </select>
    <!-- 
       ${} => '' 없이 추가 , #{} => ''
       table명, 컬럼명
     -->
    <insert id="databoardInsert" parameterType="DataBoardVO">
    <selectKey keyProperty="no" resultType="int" order="BEFORE">
       SELECT NVL(MAX(no)+1,1) as no FROM project_databoard
    </selectKey>
    INSERT INTO project_databoard VALUES(
    #{no},#{name},#{subject},#{content},#{pwd},SYSDATE,0,#{filename},#{filesize}
    )
    </insert>
    <!-- 중복 SQL 문장을 제거 => include 시킴 -->
    <sql id="where-no">
    WHERE no=#{no}
    </sql>
    <update id="hitIncrement" parameterType="int">
       UPDATE project_databoard SET 
       hit=hit+1
       <include refid="where-no"></include>
    </update>
    <select id="databoardDetailData" resultType="DataBoardVO" parameterType="int">
       SELECT * FROM project_databoard
       <include refid="where-no"></include>
    </select>
    <select id="databoardFileInfoData" resultType="DataBoardVO" parameterType="DataBoardVO">
    SELSECT filename, filesize
    FROM project_databoard
    <include refid="where-no"></include>
    </select>
    <select id="databoardGetPassword" resultType="String" parameterType="int">
    SELECT pwd FROM project_databoard
    <include refid="where-no"></include>
    </select>
    <delete id="databoardDelete" parameterType="int">
     DELETE FROM project_databoard
     <include refid="where-no"></include>
    </delete>
    <update id="databoardUpdate" parameterType="DataBoardVO">
      UPDATE project_databoard SET 
      name=#{name},subject=#{subject},content=#{content}
       <include refid="where-no"></include>
    </update>
    <!-- SELECT , UPDATE , DELETE , INSERT
         selectkey => 자동 증가번호 => insert (시퀀스 생각)
         sql => 반복 sql 문장을 제어 => 저장해뒀다가 include 시킴
         include => sql에 등록된 SQL 문장을 얻어온다
     -->
</mapper>